% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/define_aliases.R
\name{define_aliases}
\alias{define_aliases}
\title{Define Aliases for Credit Portfolio Dataset Columns}
\usage{
define_aliases(
  df = NULL,
  binary_outcome = NULL,
  multinomial_outcome = NULL,
  days_past_due_outcome = NULL,
  cumulative_financial_outcome = NULL,
  loan_status = NULL,
  application_status = NULL,
  other_outcome_col_names = NULL,
  application_id = NULL,
  loan_id = NULL,
  client_id = NULL,
  other_id_colnames = NULL,
  application_created_timestamp = NULL,
  other_timestamp_colnames = NULL,
  predictors_colnames = ".auto"
)
}
\arguments{
\item{df}{A data.frame or tibble containing the dataset where aliases will be applied. If `df` is not directly provided, the function attempts to find it in the parent environment.}

\item{binary_outcome}{A character vector or list specifying the column(s) and their mappings for binary outcomes.}

\item{multinomial_outcome}{Similar to binary_outcome, but for multinomial outcomes.}

\item{days_past_due_outcome}{Column name(s) for days past due outcomes, expected to be numeric.}

\item{cumulative_financial_outcome}{Column name(s) for cumulative financial outcomes.}

\item{loan_status}{Column name(s) for loan status with optional mappings.}

\item{application_status}{Column name(s) for application status with optional mappings.}

\item{other_outcome_col_names}{Additional outcome column names not covered by the above.}

\item{application_id}{Column name(s) for application IDs.}

\item{loan_id}{Column name(s) for loan IDs.}

\item{client_id}{Column name(s) for client IDs.}

\item{application_created_timestamp}{Column name(s) for application creation timestamps.}

\item{predictors_colnames}{Specifies the predictor columns, '.auto' for automatic detection.}
}
\value{
A structured list of the processed aliases and their mappings, which can be used as an argument for creating a dataset via the `loan_df` function.

A structured list containing the processed aliases and their mappings, ready for further analysis or processing within the package.
}
\description{
This function facilitates standardized processing and analysis of credit portfolio data by allowing users to define aliases for various dataset columns. It supports defining aliases for key aspects of loan data, such as application statuses, loan performance, binary outcomes for customer behavior, multinomial outcomes, days past due (DPD), and unique identifiers. For specific aliases, detailed mappings are required, especially for `application_status` and `loan_status`, to ensure accurate analysis.
}
\details{
**Specific Aliases and Their Keys:**

- `application_status`: Maps the process stages of loan applications. Keys include:
  - `ACCEPTED`: The application has been accepted, resulting in an issued loan.
  - `REJECTED`: The application has been rejected due to internal lending rules and/or the scorecard.
  - `CANCELLED`: The client started creating the application, but it was cancelled (often unfinished) before evaluation.
  - `IN_PROCESS`: The application is currently being evaluated. The status will change to `REJECTED` if it does not pass the internal evaluation, or `ISSUED` if it passes and no further client action is required.

- `loan_status`: Corresponds to the performance of accepted loans. Keys include:
  - `ACTIVE`: Loans that are currently open, which may include performing loans or delayed loans expected to recover.
  - `PAID`: Loans that have been fully paid off.
  - `DEFAULTED`: Loans that have caused losses, including those sold to debt collection, written off, or any other status indicating financial loss.
  - `RESTRUCTURED`: Loans considered in a grey zone where the original terms have been altered to favor client solvency, still active.
  - `VOIDED`: Loans that were returned in full immediately after disbursement, often due to incorrect client banking details or other reasons.

- `binary_outcome`, `multinomial_outcome`, `days_past_due_outcome`, and unique identifiers (`application_id`, `loan_id`, `client_id`, `application_created_timestamp`) are also supported, with the user able to specify detailed mappings or direct column references.

Users may specify multiple columns for each alias, either as lists for detailed mappings or as character vectors for direct column name references.
}
\examples{
df <- data.frame(
  app_id = 1:3,
  application_status = c("ACCEPTED", "ACCEPTED", "ACCEPTED", "REJECTED"),
  loan_status = c("ACTIVE", "DEFAULTED", "PAID", NA),
  class = c('GOOD', 'BAD', 'GOOD', NA),
  dpd_30 = c(FALSE, TRUE, FALSE, NA),
  fpd = c(5, 186, 0, NA),
  dpd_current_date = c(0, 186, 0, NA),
  dpd_in_MOB3 = c(0, 90, 0, NA)
)

aliases <- define_aliases(
  df,
  application_status = "application_status",
  loan_status = "loan_status",
  binary_outcome = list(class = list(GOOD = 'GOOD', BAD = 'BAD'), dpd_30 = list(GOOD = FALSE, BAD = TRUE)),
  days_past_due_outcome = c('fpd', 'dpd_current_date', 'dpd_in_MOB3')
)

}
